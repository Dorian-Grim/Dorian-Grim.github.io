[{"question": "\tO baz\u0103 de date reprezint\u0103:\n", "answers": ["\tUn ansamblu de posturi de lucru, fi\u015fiere \u015fi unit\u0103\u0163i de prelucrare\n", "\tUn ansamblu de articole secven\u0163iale accesate direct\n", "\tUn ansamblu de \u00eenregistr\u0103ri accesate \u00een paralel\n", "\tUn ansamblu integrat de \u00eenregistr\u0103ri sau de fi\u015fiere interconectate \u00een mod logic\n", "\tSuportul pentru \u00eenregistrarea datelor\n"], "correct_answers": [3]}, {"question": "\tDepozitul de date reprezint\u0103:\n", "answers": ["\tO colec\u0163ie de informa\u0163ii privind un sector dintr-o \u00eentreprindere sau o firm\u0103\n", "\tO baz\u0103 de date \u00eempreun\u0103 cu SGBD-ul asociat\n", "\tO colec\u0163ie de date organizate secven\u0163ial\n", "\tO baz\u0103 de date special conceput\u0103 prin agregarea tuturor datelor dintr-o organiza\u0163ie sau \u00eentreprindere, \u00een vederea sprijinirii procesului de luare a deciziilor\n", "\tO bibliotec\u0103 de informa\u0163ii privind un anumit sector economic\n"], "correct_answers": [3]}, {"question": "\tNivelul fizic de abstractizare a datelor permite:\n", "answers": ["\tUtilizarea concret\u0103 a posibilit\u0103\u0163ilor SGBD-ului\n", "\tProiectarea dic\u0163ionarului de date\n", "\tAsigurarea securit\u0103\u0163ii datelor\n", "\tAutomatizarea opera\u0163iilor de \u00eentre\u0163inere \u015fi dezvoltare a programelor\n", "\tDescrierea structurii sub care datele se reg\u0103sesc pe suportul de memorare\n\n"], "correct_answers": [4]}, {"question": "\tC\u00e2nd se recomand\u0103 s\u0103 se introduc\u0103 datele \u00eentr-o baza de date?\n", "answers": ["\tDup\u0103 crearea fiec\u0103rei tabele \u00een parte\n", "\tDup\u0103 crearea tuturor tabelelor \u015fi definirea restric\u0163iilor\n", "\tDup\u0103 crearea tuturor tabelelor\n", "\tOric\u00e2nd\n", "\tDatele sunt introduse de c\u0103tre administrator. Utilizatorii doar interogeaz\u0103 baza de date\n"], "correct_answers": [1]}, {"question": "\tCare dintre urm\u0103toarele enun\u0163uri caracterizeaz\u0103 modelul rela\u0163ional?\n", "answers": ["\tEste singurul model \u00een care structura datelor este definit\u0103 prin normalizare\n", "\tAsigur\u0103 independen\u0163a dintre date \u015fi prelucrari\n", "\tEste fundamentat pe teoria matematic\u0103 a rela\u0163iilor\n", "\tRespect\u0103 restric\u0163iile referen\u0163iale\n", "\tTrebuie s\u0103 existe cel pu\u0163in o cheie secundar\u0103\n"], "correct_answers": [2]}, {"question": "\tIntersec\u0163ia a dou\u0103 rela\u0163ii:\n", "answers": ["\tAre ca rezultat o rela\u0163ie cu un num\u0103r dublu de linii\n", "\tAre ca rezultat o rela\u0163ie cu un num\u0103r de dou\u0103 ori mai mic de linii\n", "\tEste o opera\u0163ie unar\u0103\n", "\tCere ca acestea sa aib\u0103 aceea\u015fi schem\u0103\n", "\tVa avea ca rezultat o rela\u0163ie cu gradul egal cu suma gradelor rela\u0163iilor ini\u0163iale\n"], "correct_answers": [3]}, {"question": "\tSe d\u0103 tabelul:\nANGAJATI (CodAngaj, Nume, DataAngajare, Compartiment, Profesia, Salariu)\nCare dintre urm\u0103toarele instruc\u0163iuni (Transact) SQL permite afi\u015farea num\u0103rului de salaria\u0163i pentru fiecare compartiment care incepe cu litera \"J\"?\n", "answers": ["\tSELECT COUNT(CodAngajat) AS Numar, Compartiment FROM ANGAJATI\n \nWHERE Compartiment LIKE \u2018J%\u2019 GROUP BY Compartiment\n", "\tSELECT CodAngajat, Nume, Compartiment FROM ANGAJATI WHERE Nume LIKE \u2018J%\u2019\n", "\tSELECT COUNT(CodAngajat) AS Numar, Nume, Compartiment\nFROM ANGAJATI WHERE Compartiment LIKE \u2018J%\u2019 GROUP BY Compartiment\n", "\tSELECT CodAngajat, Nume, Compartiment FROM ANGAJATI WHERE Compartiment LIKE \u2018J%\u2019\n", "\tNiciuna dintre cele de mai sus\n"], "correct_answers": [0]}, {"question": "\tCe se va ob\u0163ine prin urm\u0103toarea interogare (Transact) SQL:\nSELECT Nume FROM STUDENTI INNER JOIN LOCALIT ON STUDENTI.CodLoc=LOCALIT.CodLoc\nWHERE CodLoc IN\n(SELECT CodLoc FROM STUDENTI WHERE Nume = \u2018Ionescu M Petre\u2019) ?\n", "answers": ["\tNumele studen\u0163ilor asem\u0103n\u0103toare cu Ionescu M Petre\n", "\tCodul localit\u0103\u0163ii din care este studentul Ionescu M Petre\n", "\tNum\u0103rul studen\u0163ilor care sunt din aceea\u015fi localitate cu Ionescu M Petre\n", "\tFraza SELECT este scris\u0103 gre\u015fit\n", "\tNumele studen\u0163ilor care sunt din aceea\u015fi localitate cu Ionescu M Petre\n"], "correct_answers": [4]}, {"question": "\tSe d\u0103 urm\u0103toarea instruc\u021biune (Transact) SQL:\nSELECT NrFactura\nFROM CLIENTI INNER JOIN FACTURIEMISE ON\nCLIENTI.CodClient=FACTURIEMISE.Codclient WHERE ValTot IN (100, 200)\n\u00cen urma execu\u0163iei acestei interog\u0103ri se ob\u0163in:\n", "answers": ["\tNumai facturile emise cu valoare intre 100 \u015fi 200, exclusiv capetele\n", "\tNumai facturile emise cu valoare \u00eentre 100 \u015fi 200, inclusiv aceste valori\n", "\tNumai facturile emise cu valoarea de 100 sau 200\n", "\tNumai facturile emise cu valoare fie mai mic\u0103 de 100, fie mai mare de 200\n", "\tNimic, interogarea este gre\u015fit\u0103\n"], "correct_answers": [2]}, {"question": "\tSe d\u0103 tabelul:\nCHITANTE (NrChitanta, Suma, Data, NrGhiseu )\nCare dintre urm\u0103toarele instruc\u0163iuni (Transact) SQL are ca efect afi\u015farea zilelor in care s-au emis cel pu\u0163in 3 chitan\u0163e?\n", "answers": ["\tSELECT Nrchitanta, Suma, Data FROM CHITANTE WHERE COUNT(NrChitanta)>=3\n", "\tSELECT Nrchitanta, Suma, Data FROM CHITANTE HAVING COUNT(NrChitanta)>=3\n", "\tSELECT COUNT(Data), COUNT(NrChitanta) FROM CHITANTE WHERE Data IS NULL\n", "\tSELECT Data FROM CHITANTE WHERE COUNT(NrChitanta) >=3\n", "\tSELECT CHITANTE.Data FROM CHITANTE GROUP BY CHITANTE.Data HAVING\nCOUNT(NrChitanta) >= 3\n"], "correct_answers": [4]}, {"question": " Se d\u0103 tabelul:\nANGAJATI (CodAngaj, Nume, DataAngajare, Compartiment, Profesia, Salariu)\nCare dintre urm\u0103toarele instruc\u0163iuni (Transact) SQL permite majorarea salariului cu 3% pentru salaria\u0163ii angaja\u0163i \u00een anul 2010?\n", "answers": ["\tUPDATE Angajati SET Salariu = Salariu + 3% WHERE DataAngajare IN 2010\n", "\tUPDATE Salariu FROM Angajati SET Salariu=Salariu + 3%* Salariu\n \nWHERE DataAngajare IN (\u20181/1/2010\u2019 , \u201831/12/2010\u2019)\n", "\tUPDATE Angajati SET Salariu = Salariu*1.03 WHERE YEAR(DataAngajare)= 2010\n", "\tUPDATE Salariu FROM Angajati SET Salariu = Salariu * 1.03 WHERE DataAngajare BETWEEN \u20181/1/2010\u2019 AND \u201831/12/2010\u2019\n", "\tNiciuna\n"], "correct_answers": [2]}, {"question": "\tSe d\u0103 entitatea ANGAJATI, cu urm\u0103toarele atribute:\nANGAJATI (CodAngaj, Nume, DataAngajare, Compartiment, Profesia, Salariu)\nCare dintre urm\u0103toarele instruc\u0163iuni (Transact) SQL permite \u015ftergerea salaria\u0163ilor angajati \u00eenainte de \u00eenceputul anului 2010, cu profesia \"informatician\"?\n", "answers": ["\tDELETE FROM Angajati WHERE DataAngajare < \u20181/12/2009\u2019 AND Profesia LIKE \u2018%informatician%\u2019\n", "\tDELETE * FROM Angajati WHERE Profesia LIKE \u2018informatician\u2019 HAVING YEAR(DataAngajare) < 2010\n", "\tUPDATE Angajati SET CodAngaj = Null WHERE DataAngajare <\u20191/1/2010\u2019 AND Profesia LIKE \u2018%informatician%\u2019\n", "\tNiciuna\n", "\tDELETE FROM Angajati WHERE DataAngajare < \u20191/1/2010\u2019 AND Profesia LIKE \u2018%informatician%\u2019\n"], "correct_answers": [4]}, {"question": "\tCare dintre urmatoarele comenzi SQL sunt destinate manipul\u0103rii datelor?\n", "answers": ["\tINSERT\n", "\tCREATE TABLE\n", "\tUPDATE\n", "\tROLLBACK\n", "\tDELETE\n", "\tCOMMIT\n"], "correct_answers": [0, 2, 4]}, {"question": "\tPentru o baza de date rela\u0163ional\u0103 algebra rela\u0163ional\u0103 este:\n", "answers": ["\tCompleta (permite s\u0103 extrag orice informa\u0163ii din baz\u0103)\n", "\tProcedural\u0103 (Arat\u0103 \u015fi modul cum se ob\u0163in informa\u0163iile din baza de date)\n", "\tComplex\u0103 (permite s\u0103 extrag informa\u0163ii obiectuale)\n", "\tLimbaj formal\n", "\tLimbaj de definire a rapoartelor\n", "\tLimbaj de interogare\n"], "correct_answers": [0, 1, 3, 5]}, {"question": "\tC\u00e2nd crea\u0163i o baz\u0103 de date, care sunt fi\u015fierele care trebuie create obligatoriu?\n", "answers": ["\tUn fi\u015fier de date primar\n", "\tUn fi\u015fier de date primar \u015fi un fi\u015fier de log\n", "\tUn fi\u015fier de date primar, un fi\u015fier de date secundar \u015fi un fi\u015fier de log\n", "\tUn fi\u015fier de log primar\n"], "correct_answers": [1]}, {"question": "\tFolosind tabela cadru_did(cod, nume, graddid, data_ang, sal_neg, sal_merit), creat\u0103 \u015fi populat\u0103 cu date, se consider\u0103 urm\u0103toarele exemple:\n1.\tSELECT graddid, max(sal_neg) FROM cadru_did\nWHERE max(sal_neg) > 1600 GROUP BY graddid\n2.\tSELECT graddid, max(sal_neg) FROM cadru_did\n \nGROUP BY graddid\nHAVING max(sal_neg) > 1600 S\u0103 se aleag\u0103 r\u0103spunsul corect:\n", "answers": ["\tExemplul (1) este corect\n", "\tExemplul (2) este corect\n", "\tExemplul (2) nu este corect\n", "\tExemplele (1) \u015fi (2) sunt corecte\n", "\tExemplul (1) nu este corect\n", "\tNici un exemplu nu este corect\n"], "correct_answers": [1, 4]}, {"question": "\tCu ajutorul comenzii SELECT :\n", "answers": ["\tSe poate realiza jonc\u0163iunea extern\u0103(outer-join) \u00eentre tabele\n", "\tSe poate realiza jonc\u0163iunea de egalitate(equi-join) \u00eentre tabele\n", "\tNu se pot realiza jonc\u0163iuni \u00eentre tabele\n", "\tSe poate realiza jonc\u0163iunea de neegalitate(non-equi-join) \u00eentre tabele\n", "\tSe poate modifica structura unei tabele\n", "\tSe poate lega o tabel\u0103 cu ea \u00eens\u0103\u015fi\n"], "correct_answers": [0, 1, 3, 5]}, {"question": "\tUrm\u0103toarele interog\u0103ri:\n1.\tSELECT * FROM comenzi c\nWHERE \u2018penar\u2019=(SELECT den_prod FROM produs p WHERE p.codp=c.codp)\n2.\tSELECT c.nr_cda, c.codp, c.cant, c.data, c.codfisc FROM comenzi c, produs p\nWHERE p.codp=c.codp AND p.den_prod=\u2019penar\u2019\n", "answers": ["\tSunt identice ca efect\n", "\tSunt diferite ca efect\n", "\tAr fi identice ca efect dac\u0103 \u00een cererea 2 s-ar folosi operatorul OR \u00een loc de AND\n", "\tAfi\u015feaz\u0103 rezultate complet diferite\n"], "correct_answers": [0]}, {"question": "\tFolosind rela\u0163ia cadru_did(cod, nume, graddid, data_ang, sal_neg, sal_merit), s\u0103 se specifice care dintre urm\u0103toarele exemple sunt corecte:\n", "answers": ["\tSELECT avg(sal_neg) FROM cadru_did\n", "\tSELECT graddid, sum(sal_neg) FROM cadru_did\n", "\tSELECT graddid, avg(sal_neg) FROM cadru_did GROUP BY graddid\n", "\tSELECT graddid, sum(sal_neg), count(cod) FROM cadru_did GROUP BY data_ang\n", "\tSELECT graddid, avg(sal_neg) FROM cadru_did WHERE avg(sal_neg) > 1800\n"], "correct_answers": [0, 2]}, {"question": "\tInterogarea:\nSELECT min(nume), sum(nume), count(*) FROM tabela\nWHERE salariu = max(salariu)\n", "answers": ["\tEste gre\u015fit\u0103 deoarece func\u0163ia min() nu se folose\u015fte cu \u015firuri de caractere\n", "\tEste gre\u015fit\u0103 deoarece func\u0163ia sum() nu se folose\u015fte cu \u015firuri de caractere\n", "\tEste corect\u0103\n", "\tEste gre\u015fit\u0103 deoarece func\u0163ia max() nu se folose\u015fte \u00een clauza WHERE\n", "\tEste gre\u015fit\u0103 deoarece nu se folose\u015fte * \u00een func\u0163ia count()\n"], "correct_answers": [1, 3]}, {"question": "\tSe poate folosi acela\u015fi nume pentru mai multe tabele?\n", "answers": ["\tDa, dar s\u0103 nu apar\u0163in\u0103 aceleea\u015fi baze de date\n", "\tDa, dac\u0103 nu apar\u0163in aceleea\u015fi scheme\n \n", "\tNu\n", "\tDa, dac\u0103 nu apar\u0163in aceluia\u015fi proprietar\n", "\tDa, dac\u0103 apar\u0163in aceleea\u015fi scheme\n", "\tDa, dar s\u0103 nu apar\u0163in\u0103 aceleea\u015fi instan\u0163e\n"], "correct_answers": [1, 3]}, {"question": "\tInterog\u0103rile din SQL sunt la fel de expresive cu:\n", "answers": ["\tAlgebra relationala\n", "\tCalculul relational al domeniilor\n", "\tCalculul procedural\n", "\tCalculul relational al tuplurilor\n", "\tCalculul bazat pe tablouri\n"], "correct_answers": [0, 1, 3]}, {"question": "\tAvem apriori o multitudine de restric\u0163ii, dat\u0103 de o mul\u0163ime de dependen\u0163e func\u0163ionale F. Aceasta este folosit\u0103 la:\n", "answers": ["\tNormalizarea bazei de date\n", "\tCrearea bazei de date\n", "\tCrearea procedurilor de interogare\n", "\tLa validarea st\u0103rii bazei de date\n", "\tConstruc\u0163ia algebrei rela\u0163ionale\n"], "correct_answers": [0, 3]}, {"question": "\tFie tabelul METEO(localit varchar(30), tempmin numeric(3), tempmax numeric(4)).\nS\u0103 se stabileasc\u0103 \u00een care dintre exemplele urm\u0103toare se folosesc incorect operatorii aritmetici:\n", "answers": ["\tSELECT localit, -tempmin minim, +tempmax maxim FROM meteo\n", "\tSELECT localit, (tempmax-tempmin) diferenta FROM meteo\n", "\tSELECT -localit, -tempmin FROM meteo\n", "\tSELECT localit, (tempmax-tempmin)-1 FROM meteo\n", "\tSELECT localit*2, tempmax*2 FROM meteo\n"], "correct_answers": [2, 4]}, {"question": "\tOperatorul NOT se poate folosi cu:\n", "answers": ["\tOperatorul LIKE\n", "\tOperatorul IS NULL\n", "\tOperatorul >\n", "\tOperatorul IN (lista)\n", "\tOperatorul <>\n"], "correct_answers": [0, 1, 3]}, {"question": "\tFragmentarea vertical\u0103 se ob\u0163ine dintr-o rela\u0163ie prin:\n", "answers": ["\tSelec\u0163ii \u015fi replic\u0103ri\n", "\tSelec\u0163ii \u015fi proiec\u0163ii\n", "\tProiec\u0163ie\n", "\tUnire (Join)\n", "\tIntroducerea de chei externe\n"], "correct_answers": [2]}, {"question": "\tSe dau tabelele:\nPERSONAL(Marca, Numepren, Compart, Datasv, Salorar, Salorarco, Compart) PONTAJE(Marca, Data, Orelucrate, Oreco, Orenoapte, Oreabsnem)\nCe afi\u015feaz\u0103 urm\u0103toarea interogare? SELECT ZILE1.Data AS Ziua\nFROM (SELECT Data FROM PONTAJE po INNER JOIN PERSONAL pe ON\npo.Marca=pe.Marca WHERE Numepren = 'Popescu') ZILE1\nINNER JOIN (SELECT Data FROM PONTAJE po INNER JOIN PERSONAL pe ON\n \npo.Marca =pe.Marca WHERE Numepren='Georgescu') ZILE2 ON ZILE1.Data=ZILE2.Data\n", "answers": ["\tAngajatul care a lucrat mai multe zile\n", "\tNum\u0103rul total de zile \u00een care au lucrat cei doi angaja\u0163i\n", "\tNum\u0103rul de zile lucrate de fiecare angajat\n", "\tZilele \u00een care au lucrat simultan cei doi angaja\u0163i\n", "\tNum\u0103rul de zile \u00een care nu au lucrat cei doi angaja\u0163i\n"], "correct_answers": [3]}, {"question": "\tSe dau tabelele:\nANGAJATI(ID_Angajat, Nume, ID_Compart, Salariu) COMPARTIMENT (ID_Compart, Nume_Compart)\n\u015fi urm\u0103toarea interogare:\nSELECT a.ID_Angajat, a.Nume, c.ID_Compart, c. Nume_Compart FROM ANGAJATI a, COMPARTIMENT c\nWHERE a. ID_Compart = c. ID_Compart\nCe opera\u0163ii implementeaz\u0103 aceast\u0103 interogare?\n", "answers": ["\tDiferen\u0163a, proiec\u0163ia \u015fi join\n", "\tSelec\u0163ia, intersec\u0163ia \u015fi join\n", "\tIntersec\u0163ia, proiec\u0163ia \u015fi join\n", "\tSelec\u0163ia, proiec\u0163ia \u015fi join\n", "\tDiferen\u0163a, intersec\u0163ia \u015fi join\n"], "correct_answers": [3]}, {"question": "\tSe dau tabelele:\nPERSONAL(Marca, Numepren, Compart, Datasv, Salorar, Salorarco, Compart) PONTAJE(Marca, Data, Orelucrate, Oreco, Orenoapte, Oreabsnem)\nCe afi\u015feaz\u0103 urm\u0103toarea interogare? SELECT po1.Marca, pe1.Numepren,\nCOUNT(DISTINCT po1.Data) AS Zile_Lucrate, COUNT(DISTINCT po2.Data) AS Zile_Lucrate_Pan\nFROM (PONTAJE po1 INNER JOIN PERSONAL pe1 ON po1.Marca=pe1.Marca),\n(PONTAJE po2 INNER JOIN PERSONAL pe2 ON po2.Marca=pe2.Marca) WHERE po1.Orelucrate > 0 AND po2.Orelucrate > 0 AND pe2.Numepren='Ionescu' GROUP BY po1.Marca, pe1.Numepren, po2.Marca\nHAVING COUNT (DISTINCT po1.Data)> COUNT(DISTINCT po2.Data)\n", "answers": ["\tNum\u0103rul de ore lucrate pentru to\u0163i angaja\u0163ii, mai pu\u0163in pentru \u2018Ionescu\u2019\n", "\tNum\u0103rul angaja\u0163ilor care au acelea\u015fi zile lucrate cu \u2018Ionescu\u2019\n", "\tAngaja\u0163ii care lucreaz\u0103 \u00een acela\u015fi timp cu Ionescu\n", "\tAngaja\u0163ii cu un num\u0103r de zile lucrate mai mare dec\u00e2t ale lui \u2018Ionescu\u2019\n", "\tAngaja\u0163ii care au lucrat mai pu\u0163in dec\u00e2t \u2018Ionescu\u2019\n"], "correct_answers": [3]}, {"question": "\tO baz\u0103 de date distribuit\u0103 este:\n", "answers": ["\tO colec\u0163ie de date \u00eemp\u0103r\u0163it\u0103 \u00een mai multe fragmente\n", "\tO colec\u0163ie de date \u00eemp\u0103r\u0163it\u0103 \u00een mai multe replici\n", "\tO colec\u0163ie de date \u015fi de scheme partajate \u015fi interconectate logic, distribuite fizic pe calculatoarele unei re\u0163ele\n", "\tO colec\u0163ie de fragmente mixte\n", "\tNiciuna\n"], "correct_answers": [2]}, {"question": "\tBaza de date curent\u0103 include o tabel\u0103 numit\u0103 Employees cu urm\u0103toarele coloane:\n-\tfirstName, care p\u0103streaz\u0103 prenumele unui angajat;\n \n-\tlastName, care p\u0103streaz\u0103 numele unui angajat;\n-\tdepID, care p\u0103sreaz\u0103 ID \u2013ul departamentului \u00een care lucreaz\u0103 angaja\u0163ii.\nA\u0163i cerut s\u0103 se afi\u015feze o list\u0103 cu angaja\u0163ii sortat\u0103 descresc\u0103tor dup\u0103 ID departament, apoi dup\u0103 numele angaja\u0163ilor (prenume urmat de nume) \u00een ordinea alfabetic\u0103.\nCe instruc\u0163iune SELECT trebuie s\u0103 folosi\u0163i?\n", "answers": ["\tSELECT depID, (firstName + ' ' + lastName) AS 'Full Name' FROM Employees\nORDER BY depID, lastName ASC\n", "\tSELECT (firstName + ' ' + lastName) AS 'Full Name' FROM Employees\nORDER BY depID DESC, 'Full Name'\n", "\tSELECT lastName, (firstName + ' ' + lastName) AS 'Full Name' FROM Employees\nORDER BY lastName, depID\n", "\tSELECT (firstName + ' ' + lastName) AS 'Full Name' FROM Employees\nORDER BY depID DESC, lastName\n\n", "\tSELECT (firstName + ' ' + lastName) AS 'Full Name' FROM Employees\nORDER BY depID DESC, lastName DESC\n"], "correct_answers": [1]}, {"question": "\tDatorit\u0103 mut\u0103rii activit\u0103\u0163ii comerciale din Germania \u00een SUA, trebuie s\u0103 schimb\u0103m collation data pentru baza de date Adventure Works. Dup\u0103 modificarea collation pentru aceast\u0103 baz\u0103 de date, ce ar mai trebui s\u0103 face\u0163i?\n", "answers": ["\tNimic.\n", "\t\u015eterge\u0163i indec\u015fii \u015fi constr\u00e2ngerile tabelelor existente pentru care collation cere s\u0103 fie modificat. Modifica\u0163i collation pentru coloanele acelor tabele.Recrea\u0163i indec\u015fii \u015fi constr\u00e2ngerile.\n", "\t\u015eterge\u0163i indec\u015fii \u015fi constr\u00e2ngerile pentru toate tabele existente din baza de date. Modifica\u0163i collation pentru coloanele acelor tabele.Recrea\u0163i indec\u015fii \u015fi constr\u00e2ngerile.\n", "\tModifica\u0163i database collation \u015fi selecta\u0163i op\u0163iunea auto-indexing.\n", "\tRecrea\u0163i to\u0163i indec\u015fii \u00een aceast\u0103 baz\u0103 de date.\n"], "correct_answers": [1]}, {"question": "\tFirma la care lucra\u0163i folose\u015fte o tabel\u0103 numit\u0103 Products pentru a stoca informa\u0163ii despre produsele pe care le vinde. Tabela include coloanele:\n-\tprice, care con\u0163ine pre\u0163ul produsului v\u00e2ndut;\n-\tvolume, care p\u0103streaz\u0103 volumul v\u00e2nz\u0103rilor lunare medii pentru produsul respectiv;\n-\tstock, care stocheaz\u0103 num\u0103rul de buc\u0103\u0163i aflate \u00een stoc pentru un produs.\nLa \u00eenceputul fiec\u0103rei luni, firma dvs. reface stocul unui produs dac\u0103 una dintre condi\u0163iile urm\u0103toare este adev\u0103rat\u0103:\n-\tProdusul cost\u0103 100$ sau mai mult \u015fi num\u0103rul de buc\u0103\u0163i din stoc este mai mic dec\u00e2t volumul lunar mediu sau mai mic de 500.\n-\tProdusul cost\u0103 mai pu\u0163in de 100 $ \u015fi sunt mai pu\u0163in de 1500 de buc\u0103\u0163i \u00een stoc.\nDvs. trebuie s\u0103 ob\u0163ine\u0163i informa\u0163ii despre toate produsele care trebuie s\u0103 fie realimentate. Ce instruc\u0163iune ar trebui folosit\u0103?\n", "answers": ["\tSELECT * FROM Products WHERE\nprice >= 100.00\nAND stock < 500\n \nOR stock < volume OR (price < 100.00\nAND stock < 1500)\n", "\tSELECT * FROM Products\nWHERE\nprice >= 100.00 AND (stock < 500 OR stock < volume) OR price < 100 AND stock < 1500\n", "\tSELECT * FROM Products\nWHERE\n(price >= 100.00 AND stock < 500 OR stock < volume) OR (price < 100.00 AND stock < 1500)\n", "\tSELECT * FROM Products\nWHERE\nprice >= 100.00 AND stock < 500 OR stock < volume OR price < 100.00 AND stock < 1500\n", "\tSELECT * FROM Products\nWHERE\nprice >= 100.00 AND stock < 500 OR stock < volume AND price < 100.00"], "correct_answers": [1]}, {"question": "\t\tPentru a afi\u015fa numele angaja\u0163ilor care au un salariu mai mare dec\u00e2t al cel pu\u0163in unui manager existent, ar trebui s\u0103 folosi\u0163i instruc\u0163iunea:\nSELECT name FROM Employees\nWHERE salary > ANY (SELECT salary FROM Management).\nTrebuie s\u0103 crea\u0163i o instruc\u0163iune alternativ\u0103 care s\u0103 dea acela\u015fi rezultat \u015fi care s\u0103 se execute cel pu\u0163in la fel de rapid.\nCe instruc\u0163iune ar trebui s\u0103 folosi\u0163i ?\n", "answers": ["\tSELECT name FROM Employees\nWHERE NOT salary < ALL (SELECT salary FROM Management)\n", "\tSELECT name FROM Employees WHERE NOT EXISTS\n(SELECT * FROM Management WHERE salary >= Employees.salary)\n", "\tSELECT name FROM Employees WHERE EXISTS\n(SELECT * FROM Management WHERE salary < Employees.salary)\n", "\tSELECT name FROM Employees\nJOIN Management ON Employees.salary > Management.salary\n", "\tNici una.\n"], "correct_answers": [2]}, {"question": "\tAve\u0163i o tabel\u0103 numit\u0103 Employees, care include urm\u0103toarele coloane:\n \n-\tempName, care con\u0163ine numele angajatului;\n-\tdepartment, care con\u0163ine numele departmentului \u00een care lucreaz\u0103 angajatul.\nPentru fiecare angajat care lucreaz\u0103 \u00eentr-un departament cu mai mult de 10 angaja\u0163i, trebuie s\u0103 afi\u015fa\u0163i numele angajatului, numele departamentului \u015fi nr. de angaja\u0163i din acel departament.Trebuie s\u0103 scrie\u0163i o interogare care s\u0103 extrag\u0103 aceast\u0103 informa\u0163ie \u00een cel mai scurt timp. Ce instruc\u0163iune ar trebui folosit\u0103 ?\n", "answers": ["\tSELECT empName, department,\n(SELECT COUNT(*) FROM Employees WHERE department = e.department) FROM Employees AS e\n", "\tSELECT department, COUNT(*) AS employees INTO DepCounts\nFROM Employees GROUP BY department\nSELECT e.empName, e.department, d.employees FROM Employees AS e\nJOIN DepCounts AS d ON e.department = d.department WHERE d.employees > 10\n", "\tSELECT empName, department,\n(SELECT COUNT(*) FROM Employees WHERE department = e.department) FROM Employees AS e WHERE 10 < (SELECT COUNT(*) FROM Employees\nWHERE department = e.department);\n", "\tSELECT empName, department,\n(SELECT COUNT(*) FROM Employees WHERE (department = e.department) And count(*) >10) FROM Employees AS e\n", "\tNici una.\n"], "correct_answers": [1]}, {"question": "\tA\u0163i scris o instruc\u0163iune SELECT complex\u0103 care afi\u015feaz\u0103 date din mai multe tabele. Trebuie s\u0103 crea\u0163i o tabel\u0103 nou\u0103 \u015fi s\u0103 o popula\u0163i cu aceste date folosind cel mai mic num\u0103r de instruc\u0163iuni posibil.Ce ar trebui s\u0103 face\u0163i ?\n", "answers": ["\tCrea\u0163i tabela \u015fi apoi folosi\u0163i instruc\u0163iunea INSERT INTO ... SELECT FROM pentru a o popula.\n", "\tFolosi\u0163i o instruc\u0163iune SELECT INTO pentru a crea \u015fi popula tabela.\n", "\tFolosi\u0163i o instruc\u0163iune SELECT INTO pentru a crea \u015fi popula o tabel\u0103 temporar\u0103, apoi crea\u0163i tabela permanent\u0103 din tabela temporar\u0103.\n", "\tCrea\u0163i tabela, apoi folosi\u0163i o instruc\u0163iune SELECT INTO pentru a o popula.\n", "\tFolosi\u0163i dou\u0103 proceduri stocate: una pentru crearea tabelei \u015fi alta pentru populare.\n"], "correct_answers": [1]}, {"question": "\tFirma la care lucra\u0163i vinde echipamente de la fabrican\u0163i multipli care folosesc ID-\nuri de produse similare \u015fi este nevoie s\u0103 se urm\u0103reasc\u0103 ID produs, ID fabricant, nume produs, pre\u0163 produs pentru fiecare pies\u0103 de echipament din tabela Products. Trebuie s\u0103 v\u0103 asigura\u0163i c\u0103 nu sunt permise intr\u0103ri multiple pentru acela\u0163i produs. Ce instruc\u0163iune ar trebui folosit\u0103 ?\n", "answers": ["\tCREATE TABLE Products ( productID int PRIMARY KEY, manufacturerID int, productName varchar(50), price decimal(7,2))\n", "\tCREATE TABLE Products ( productID int UNIQUE, manufacturerID int PRIMARY KEY, productName varchar(50),\n \nprice decimal(7,2))\n", "\tCREATE TABLE Products ( productID int, manufacturerID int,\nproductName varchar(50) PRIMARY KEY, price decimal(7,2))\n", "\tCREATE TABLE Products ( productID int, manufacturerID int, productName varchar(50), price decimal(7,2),\nCONSTRAINT product_key PRIMARY KEY (productID, manufacturerID))\n", "\tNu este posibil de realizat aceast\u0103 cerin\u0163\u0103.\n"], "correct_answers": [3]}, {"question": "\tComanda:\nSELECT DISTINCT codp, denp FROM Produse WHERE codp > 200\nORDER BY cantp\nsimuleaz\u0103 implementarea operatorilor rela\u0163ionali de:\n", "answers": ["\tProiec\u0163ie \u015fi jonc\u0163iune\n", "\tSelec\u0163ie \u015fi intersec\u0163ie\n", "\tSelec\u0163ie \u015fi reuniune\n", "\tProiec\u0163ie \u015fi selec\u0163ie\n", "\tReuniune \u015fi jonc\u0163iune\n"], "correct_answers": [3]}, {"question": "\tDin categoria func\u0163iilor de grup fac parte:\n", "answers": ["\tFunc\u0163ia COUNT( )\n", "\tFunc\u0163ia SUM( )\n", "\tFunc\u0163ia ROUND( )\n", "\tFunc\u0163ia RTRIM( )\n", "\tFunc\u0163ia STDEV( )\n"], "correct_answers": [0, 1, 4]}, {"question": "\tD\u00e2ndu-se tabelele Produse(codp, denp, pret ) \u015fi Comenzi(nr_cda, codp, cant, data), instruc\u0163iunile SELECT:\nSELECT *\nFROM comenzi c\nWHERE \u2018Stilou\u2019=(SELECT denp FROM produse p WHERE p.codp=c.codp) \u015fi\nSELECT c.nr_cda, c.codp, c.cant, c.data FROM comenzi c, produse p\nWHERE p.codp=c.codp AND p.denp = \u2018Stilou\u2019\n", "answers": ["\tSunt diferite\n", "\tSunt identice\n", "\tAr fi identice dac\u0103 \u00een al doilea SELECT s-ar folosi operatorul OR \u015fi nu AND\n", "\tAr fi identice dac\u0103 \u00een primul SELECT s-ar folosi operatorul IN \u015fi nu =\n", "\tAr fi identice dac\u0103 \u00een al doilea SELECT \u00een clauza WHERE s-ar scrie condi\u0163ia de filtrare \u015fi apoi cea de join.\n"], "correct_answers": [1]}, {"question": "\tComanda DROP nume_tabela este echivalent\u0103 cu comanda:\n \n", "answers": ["\tDELETE FROM nume_tabela\n", "\tTRUNCATE\n", "\tALTER TABLE\n", "\tALTER DATABASE\n", "\tCu nici una\n"], "correct_answers": [4]}, {"question": "\tFolosind tabela cadru_did(cod, nume, graddid, data_ang, sal_neg, sal_merit), creat\u0103 \u015fi populat\u0103 cu date, s\u0103 se specifice care dintre exemplele urm\u0103toare sunt corecte:\n", "answers": ["\tSELECT SUM(sal_neg) FROM cadru_did\n", "\tSELECT graddid, SUM(sal_neg) FROM cadru_did\n", "\tSELECT graddid, SUM(sal_neg) FROM cadru_did GROUP BY graddid\n", "\tSELECT graddid, SUM(sal_neg), COUNT(graddid) FROM cadru_did GROUP BY data_ang\n", "\tSELECT graddid, SUM(sal_neg) FROM cadru_did WHERE SUM(sal_neg) > 10000\n"], "correct_answers": [0, 2]}, {"question": "\tUn utilizator a \u0219ters accidental o linie din tabela Produse, care con\u021bine o coloan\u0103 IDENTITY numit\u0103 id. C\u00e2nd \u00eencerca\u021bi s\u0103 reinsera\u021bi acelea\u0219i date care au fost \u00een linia \u0219tears\u0103, primi\u021bi un mesaj de eroare. Ce ar trebui s\u0103 face\u021bi?\n", "answers": ["\tPune\u021bi pe on proprietatea IDENTITY_INSERT folosind SQL Server Management Studio (SSMS) \u0219i apoi insera\u021bi linia.\n", "\tExecuta\u021bi instruc\u021biunea SET IDENTITY_INSERT Produse ON \u0219i apoi insera\u021bi linia.\n", "\t\u0218terge\u021bi proprietatea IDENTITY pentru coloana id folosind SQL Server Management Studio (SSMS) \u0219i apoi insera\u021bi linia.\n", "\tReini\u021bializa\u021bi valoarea id cu cea a liniei \u0219terse \u0219i apoi insera\u021bi linia.\n"], "correct_answers": [1]}, {"question": "\tScrie\u021bi o instruc\u021biune SELECT care extrage date din dou\u0103 tabele. Trebuie s\u0103 returna\u021bi toate liniile din prima tabel\u0103 \u0219i numai liniile care \u00eendeplinesc condi\u021bia din JOIN din a doua tabel\u0103. Ce tip de JOIN ar trebui s\u0103 folosi\u021bi?\n", "answers": ["\tLEFT\n", "\tRIGHT\n", "\tINNER\n", "\tFULL\n"], "correct_answers": [0]}, {"question": "\tCompania dumneavoastr\u0103 are un num\u0103r de ma\u0219ini care sunt folosite de angaja\u021bi pentru o perioad\u0103 scurt\u0103 de timp. \u00cen acest scop ave\u021bi o tabel\u0103 numit\u0103 Cars, care p\u0103streaz\u0103 informa\u021bii despre ma\u0219ini \u0219i o tabel\u0103 numit\u0103 CarAssignments, care stocheaz\u0103 ma\u0219inile asignate fiec\u0103rui angajat. Trebuie s\u0103 crea\u021bi o constr\u00e2ngere care s\u0103 v\u0103 asigure c\u0103 toate valorile atribuite coloanei car_id din tabela CarAssignments corespund unei valori a coloanei id din tabela Cars. De asemenea, trebuie s\u0103 v\u0103 asigura\u021bi c\u0103, dac\u0103 se \u0219terge o linie din tabela Cars, se vor \u0219terge \u0219i liniile din tabela CarAssignments care o referen\u021biaz\u0103. Ce instruc\u021biune ar trebui folosit\u0103?\n", "answers": ["\tALTER TABLE CarAssignments\nADD CONSTRAINT FK_car_id FOREIGN KEY (car_id) REFERENCES Cars (id) ON DELETE CASCADE;\n", "\tALTER TABLE CarAssignments\nADD CONSTRAINT FK_car_id FOREIGN KEY (car_id) REFERENCES Cars (id) ON DELETE SET NULL;\n", "\tALTER TABLE CarAssignments\nADD CONSTRAINT FK_car_id FOREIGN KEY (car_id)\n \nREFERENCES Cars (id);\n", "\tALTER TABLE CarAssignments\nADD CONSTRAINT FK_car_id FOREIGN KEY (car_id) REFERENCES Cars (id) ON DELETE NO ACTION;\n"], "correct_answers": [0]}, {"question": "\tCompania dumneavoastr\u0103 folose\u0219te tabela WebSites pentru a urm\u0103ri informa\u021bia despre traficul zilnic al mai multor Web sites. Tabela include \u0219i urm\u0103toarele coloane:\n-\tid, care stocheaz\u0103 ID Web site;\n-\thits, care p\u0103streaz\u0103 num\u0103rul de acces\u0103ri ale site-ului din acea zi.\nTrebuie s\u0103 afi\u0219a\u021bi num\u0103rul mediu de acces\u0103ri zilnice pentru fiecare Web site. Ce instruc\u021biune ar trebui s\u0103 folosi\u021bi?\n", "answers": ["\tSELECT SUM(hits)/COUNT(id)\nFROM WebStats GROUP BY id;\n", "\tSELECT COUNT(*), AVG(hits)\nFROM WebStats GROUP BY hits;\n", "\tSELECT id, AVG(hits) FROM WebStats GROUP BY id;\n", "\tSELECT AVG(hits)\nFROM WebStats;\n"], "correct_answers": [2]}, {"question": "\tA\u021bi creat tabela Angajati cu instruc\u021biunea:\nCREATE TABLE Angajati (nume varchar(20), departament varchar(20)); Se vor ad\u0103uga, apoi, patru persoane:\n-\t\u201dAngajat unu\u201d \u00een departamentul Sales;\n-\t\u201cAngajat doi\u201d \u00een departamentul Sales;\n-\t\u201cAngajat trei\u201d \u00een departamentul Marketing;\n-\t\u201cAngajat patru\u201d \u00een departamentul HR.\nTrebuie s\u0103 ad\u0103uga\u021bi ace\u0219ti angaja\u021bi tabelei Angajati folosind cea mai mic\u0103 secven\u021b\u0103 de cod. Care interogare ar trebui executat\u0103 \u00een acest scop?\n", "answers": ["\tINSERT INTO Angajati (nume, departament) VALUES (' Angajat unu\u2019, 'Sales');\nINSERT INTO Angajati (nume, departament) VALUES (' Angajat doi', 'Sales');\nINSERT INTO Angajati (nume, departament) VALUES (' Angajat trei', 'Marketing');\nINSERT INTO Angajati (nume, departament) VALUES (' Angajat patru', 'HR');\n", "\tINSERT INTO Angajati (nume, departament)\nVALUES (' Angajat unu', 'Sales'),  (' Angajat doi', 'Sales'),\n(' Angajat trei', 'Marketing'),\t(' Angajat patru', 'HR');\n", "\tINSERT INTO Angajati VALUES (' Angajat unu', 'Sales');\nINSERT INTO Angajati\nVALUES (' Angajat doi', 'Sales'); INSERT INTO Angajati\nVALUES (' Angajat trei', 'Marketing'); INSERT INTO Angajati\n \nVALUES (' Angajat patru', 'HR');\n", "\tINSERT INTO Angajati\nVALUES (' Angajat unu', 'Sales'),\t(' Angajat doi', 'Sales'),\n(' Angajat trei', 'Marketing'), (' Angajat patru', 'HR');\n"], "correct_answers": [3]}, {"question": "\tAve\u021bi o tabel\u0103 Employees, cu angaja\u021bii unei firme, care include o coloan\u0103 de tip nchar(30) numit\u0103 NumeAng. Coloana NumeAng con\u021bine prenumele \u0219i numele unui angajat, separate de caracterul underscore (_). Trebuie s\u0103 c\u0103uta\u021bi \u00een tabel\u0103 to\u021bi angaja\u021bii al c\u0103ror nume de familie este Popa. Ce expresie ar trebui s\u0103 folosi\u021bi \u00een clauza WHERE a instruc\u021biunii SELECT?\n", "answers": ["\tRTRIM(NumeAng) LIKE '%_Popa'\n", "\tNumeAng LIKE '%!_Popa' ESCAPE '!'\n", "\tRTRIM(NumeAng) LIKE '%!_Popa' ESCAPE '!'\n", "\tNumeAng LIKE '%Popa%'\n"], "correct_answers": [2]}, {"question": "\tA\u021bi creat tabela Angajati, \u00een care p\u0103stra\u021bi informa\u021biile despre angaja\u021bii firmei unde lucra\u021bi, cu instruc\u021biunea:\nCREATE TABLE Angajati ( nume varchar(50), telefon char(10), email varchar(20)). Trebuie s\u0103 v\u0103 asigura\u021bi c\u0103 angaja\u021bii vor putea fi introdu\u0219i \u00een tabel\u0103 cu valoarea NULL \u00een coloana nume, dar f\u0103r\u0103 valori de tip NULL \u00een coloanele telefon \u0219i email(simultan). Cum ar trebui s\u0103 modifica\u021bi coloanele tabelei?\n", "answers": ["\tAd\u0103uga\u021bi o constr\u00e2ngere CHECK (telefon IS NOT NULL OR email IS NOT NULL) pe coloana telefon.\n", "\tAd\u0103uga\u021bi NOT NULL la coloanele telefon \u0219i email.\n", "\tAd\u0103uga\u021bi NULL la coloana nume.\n", "\tAdd constr\u00e2ngerea CHECK(telefon IS NOT NULL OR email IS NOT NULL) pe tabel\u0103."], "correct_answers": [3]}, {"question": "\tA\u021bi creat urm\u0103toarea tabel\u0103 cu instruc\u021biunea:\nCREATE TABLE dbo.Products (ID bigint IDENTITY(1,1) NOT NULL,\nName nvarchar(100) NOT NULL, FirstProduction timestamp NOT NULL, Cost decimal(12, 4) NOT NULL, SalePrice decimal(12,4) NOT NULL, Volume bigint NOT NULL, Margin AS (SalePrice - Cost) / Cost);\nTrebuie s\u0103 modifica\u021bi structura tabelei pentru a utiliza cel mai mic spa\u021biu de stocare. Ce instruc\u021biuni ar trebui s\u0103 folosi\u021bi?\n", "answers": ["\tALTER TABLE dbo.Products ALTER COLUMN Margin AS (SalePrice - Cost);\n", "\tALTER TABLE dbo.Products REBUILD WITH (DATA_COMPRESSION = ROW);\n", "\tALTER TABLE dbo.Products ALTER COLUMN Name ADD SPARSE;\n", "\tALTER TABLE dbo.Products ALTER COLUMN Volume int;\n", "\tALTER TABLE dbo.Products ALTER COLUMN Cost decimal(10,2);"], "correct_answers": [1, 3]}]