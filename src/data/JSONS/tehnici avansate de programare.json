[{"question": " Complexitatea minim\u0103 a unui algoritm care calculeaz\u0103 num\u0103rul tuturor submul\u021bimilor unei mul\u021bimi cu\ud835\udc5b elemente este:\n\n  a)\ud835\udcaa(\ud835\udc5b2)\nb)\ud835\udcaa(2\ud835\udc5b)\nc):white_check_mark: \ud835\udcaa(\ud835\udc5b)\nd)\ud835\udcaa(\ud835\udc5b!)", "answers": [], "correct_answers": []}, {"question": " Complexitatea minim\u0103 a unui algoritm care afi\u015feaz\u0103 toate submul\u021bimile unei mul\u021bimi cu\ud835\udc5b elemente este:\n\n  a)\ud835\udcaa(\ud835\udc5b2)\nb):white_check_mark: \ud835\udcaa(2\ud835\udc5b)\nc)\ud835\udcaa(\ud835\udc5b)\nd)\ud835\udcaa(\ud835\udc5b!)", "answers": [], "correct_answers": []}, {"question": " Complexitatea minim\u0103 a unui algoritm care calculeaz\u0103 num\u0103rul modurilor \u00een care pot fi a\u015fezate n c\u0103r\u021bi pe un raft suficient de lung este:\n\n  a)\ud835\udcaa(\ud835\udc5b2)\nb)\ud835\udcaa(2\ud835\udc5b)\nc):white_check_mark: \ud835\udcaa(\ud835\udc5b)\nd)\ud835\udcaa(\ud835\udc5b!)", "answers": [], "correct_answers": []}, {"question": " Complexitatea minim\u0103 a unui algoritm care afi\u015feaz\u0103 toate modurile \u00een care pot fi a\u015fezate n\nc\u0103r\u021bi pe un raft suficient de lung este:\n\n  a)\ud835\udcaa(\ud835\udc5b2)\nb):white_check_mark: \ud835\udcaa(2\ud835\udc5b)\nc)\ud835\udcaa(\ud835\udc5b)\nd)\ud835\udcaa(\ud835\udc5b!)", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m urm\u0103torul program \u00een limbajul C:\n\n  #include<stdio.h> int main()\n\n  {\n    int i,\n    j,\n    n,\n    a[101];\n    scanf(\"%d\", & n);\n    for (i = 0; i < n; i++) scanf(\"%d\", & a[i]);i = 0;\n    while ((i < n) && (a[i] < 0)) i++;j = n - 1;\n    while ((j >= 0) && (a[j] >= 0)) j--;\n    if (i >= j) printf(\"1\");\n    else printf(\"0\");\n    return 0;\n  }\n\nComplexitatea algoritmului implementat \u00een acest program este:\n\n  a)\ud835\udcaa(\ud835\udc5b2)\nb)\ud835\udcaa(log2\ud835\udc5b)\nc)\ud835\udcaa(\ud835\udc5b3)\nd):white_check_mark: \ud835\udc42(\ud835\udc5b)", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 un \u0219ir format din maxim 100 de numere naturale distincte cuprinse \u00eentre 1 \u0219i 1000. Complexitatea minim\u0103 a unui algoritm care s\u0103 afi\u0219eze numerele din \u0219ir \u00een ordine cresc\u0103toare este:\n\n  a)\ud835\udcaa(\ud835\udc5b2)\nb)\ud835\udcaa(\ud835\udc5b3)\nc)\ud835\udcaa(\ud835\udc5blog2\ud835\udc5b)\nd):white_check_mark: \ud835\udcaa(\ud835\udc5b)", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m urm\u0103torul program \u00een limbajul C:\n\n  #include<stdio.h> int main()\n\n  {\n    int a[100],\n    i,\n    j,\n    n,\n    s;\n    scanf(\"%d\", & n);\n    for (i = 0; i < n; i++) scanf(\"%d\", & a[i]);\n\n    i = s = 0;\n    while (i < n) {\n      j = i + 1;\n      while ((j <= n) && (a[i] == a[j])) j++;\n      s++;\n      i = j;\n    }\n    printf(\"\\n\\n%d\\n\", s);\n    return 0;\n  }\n\nComplexitatea algoritmului implementat \u00een acest program este:\n\n  a)\ud835\udcaa(\ud835\udc5b2)\nb)\ud835\udcaa(log2\ud835\udc5b)\nc)\ud835\udcaa(\ud835\udc5b3)\nd):white_check_mark: \ud835\udc42(\ud835\udc5b)", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m urm\u0103torul program \u00een limbajul C:\n\n  #include<stdio.h> int main()\n\n  {\n    int i,\n    j,\n    n,\n    a[101];\n\n    scanf(\"%d\", & n);\n    for (i = 0; i < n; i++) scanf(\"%d\", & a[i]);i = 0;\n    while ((i < n) && (a[i] < 0)) i++;j = n - 1;\n    while ((j >= 0) && (a[j] >= 0)) j--;\n    if (i >= j) printf(\"1\");\n    else printf(\"0\");\n    return 0;\n  }\n\nProgramul afi\u015feaz\u0103:\n\n  a) 1 dac\u0103 \u015fi numai dac\u0103 tabloul a este sortat cresc\u0103tor \u015fi 0 altfel;\nb) 1 dac\u0103 \u015fi numai dac\u0103 toate valorile din tabloul a sunt pozitive \u015fi 0 altfel;\nc):white_check_mark: 1 dac\u0103 \u015fi numai dac\u0103 \u00een tabloul a valorile negative se afl\u0103 \u00eenaintea celor pozitive \u015fi 0\naltfel;\nd) 1 dac\u0103 \u015fi numai dac\u0103 toate valorile din tabloul a sunt strict negative \u015fi 0 altfel.\n  ", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m urm\u0103torul program \u00een limbajul C:\n\n  #include<stdio.h> int main()\n\n  {\n    int a[100],\n    i,\n    j,\n    n,\n    s;\n    scanf(\"%d\", & n);\n    for (i = 0; i < n; i++) scanf(\"%d\", & a[i]);\n\n    i = s = 0;\n    while (i < n) {\n      j = i + 1;\n      while ((j <= n) && (a[i] == a[j])) j++;\n      s++;\n      i = j;\n    }\n    printf(\"\\n\\n%d\\n\", s);\n    return 0;\n  }\n\nPresupun\u00e2nd c\u0103 tabloul\ud835\udc4e este ordonat cresc\u0103tor, preciza\u021bi ce afi\u015feaz\u0103 programul dat:\n\n  a):white_check_mark: num\u0103rul valorilor distincte din tabloul\ud835\udc4e;\nb) lungimea maxim\u0103 a unei secven\u0163e din tabloul\ud835\udc4e format\u0103 din valori egale;\nc) num\u0103rul secven\u0163elor strict cresc\u0103toare din tabloul\ud835\udc4e;\nd) lungimea maxim\u0103 a unui sub\u015fir din tabloul\ud835\udc4e format din valori egale.\n  ", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 urm\u0103toarea func\u0163ie recursiv\u0103, scris\u0103 \u00een limbajul C:\n\n  int F(int n) {\n    if (n == 0) return 0;\n\n    else\n    if ((n % 10) > F(n / 10)) return n % 10;\n    else return F(n / 10);\n  }\n\nCe valoare va returna func\u021bia dup\u0103 apelul\ud835\udc39(38423) ?\n\n  a) 3\nb) 2\nc):white_check_mark: 8\nd) 4\n  ", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 urm\u0103torul program \u00een limbajul C:\n\n  #include<stdio.h> int F(int v[],int n)\n\n  {\n    if (n == 0) return v[0];\n    else\n    if (v[n] < 0) return F(v, n - 1);\n    else return v[n] + F(v, n - 1);\n  }\nint main() {\n  int i, v[10];\n  for (i = 0; i < 10; i++)\n    if (i % 2 == 0) v[i] = i;\n    else v[i] = -i;\n  printf(\"%d\", F(v, 9));\n  return 0;\n}\n\nCe afi\u015feaz\u0103 programul de mai sus ?\n\n  a) - 20\nb) 0\nc):white_check_mark: 20\nd) - 5\n  ", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 urm\u0103toarea func\u0163ie recursiv\u0103, scris\u0103 \u00een limbajul C:\n\n  int f(int n) {\n    if (n == 0) return 1;\n    else return (((n % 10) % 2 == 0) && (f(n / 10) != 0));\n  }\n\nCe valoare va returna func\u021bia dup\u0103 apelul\ud835\udc53(6904) ?\n\n  a) 4\nb) 6\n\nc) 9\nd):white_check_mark: 0", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 urm\u0103toarea func\u0163ie recursiv\u0103, scris\u0103 \u00een limbajul C:\n\n  int f(int x) {\n    if (x == 0) return 0;\n    else return (f(x - 1) + 3 * x - 1);\n  }\n\nPentru ce valoare a parametrului\ud835\udc65 func\u021bia\ud835\udc53 va \u00eentoarce valoarea 57 ?\n\n  a) 5\nb):white_check_mark: 6\nc) 8\nd) 10\n  ", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 urm\u0103toarea func\u0163ie recursiv\u0103, scris\u0103 \u00een limbajul C:\n\n  int p(int n, int x) {\n    if (x == n) return 1;\n    else\n    if (n % x == 0) return 0;\n    else return p(n, x + 1);\n  }\n\n\u00cen urma apelului\ud835\udc5d(\ud835\udc5b, 2) func\u021bia va \u00eentoarce valoarea 1 dac\u0103 \u0219i numai dac\u0103:\n\n  a) num\u0103rul natural\ud835\udc5b este par;\nb):white_check_mark: num\u0103rul natural\ud835\udc5b este prim;\nc) num\u0103rul natural\ud835\udc5b nu este prim;\nd) num\u0103rul natural\ud835\udc5b este impar.\n  ", "answers": [], "correct_answers": []}, {"question": " Indica\u0163i care dintre urm\u0103toarele metode de sortare se bazeaz\u0103 pe tehnica de programare Divide et Impera:\n\n  a):white_check_mark: sortarea rapid\u0103;\nb) sortarea prin interschimbare;\nc):white_check_mark: sortarea prin interclasare;\nd) sortarea prin num\u0103rare.\n  ", "answers": [], "correct_answers": []}, {"question": " Stabili\u021bi care dintre urm\u0103toarele metode de sortare nu se bazeaz\u0103 pe tehnica de programare Divide et Impera:\n\n  a) sortarea rapid\u0103;\nb):white_check_mark: sortarea prin interschimbare;\n\nc) sortarea prin interclasare;\nd):white_check_mark: sortarea prin num\u0103rare.\n  ", "answers": [], "correct_answers": []}, {"question": " Indica\u0163i care dintre urm\u0103toarele metode de sortare au complexitatea\ud835\udcaa(\ud835\udc5blog2\ud835\udc5b):\n\n  a):white_check_mark: sortarea rapid\u0103;\nb):white_check_mark: sortarea cu ansamble;\nc):white_check_mark: sortarea prin interclasare;\nd) sortarea prin num\u0103rare.\n  ", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m urm\u0103toarele dou\u0103 func\u021bii scrise \u00een limbajul C:\n\n  int a[100];\nint max(int x, int y) {\n  if (x > y) return x;\n  else return y;\n}\nint F(int p, int u) {\n  if (p == u) return a[p];\n  else {\n    int m = (p + u) / 2;\n    return max(F(p, m), F(m + 1, u));\n  }\n}\n\n\u015etiind c\u0103 tabloul a este format din n numere naturale nenule, iar apelul subprogramului va fi\ud835\udc39(0, \ud835\udc5b\u22121), preciza\u021bi tehnica de programare utilizat\u0103 \u00een cadrul func\u021biei\ud835\udc39:\n\n  a) Greedy;\nb) backtracking;\nc) programarea dinamic\u0103;\nd):white_check_mark: Divide et Impera.\n  ", "answers": [], "correct_answers": []}, {"question": " Fie\ud835\udc63 un tablou unidimensional format din 1000000 de numere reale ordonate descresc\u0103tor \u015fi\ud835\udc65 un num\u0103r real.Pentru a verifica dac\u0103 valoarea\ud835\udc65 se g\u0103se\u015fte sau nu \u00een tabloul\ud835\udc63, algoritmul de c\u0103utare binar\u0103 va efectua:\n\n  a) exact 1000000 de compara\u0163ii;\nb) cel pu\u0163in 24 de compara\u0163ii;\nc):white_check_mark: cel mult 24 de compara\u0163ii;\nd) nu se poate folosi algoritmul de c\u0103utare binar\u0103 \u00een acest caz.\n  ", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m urm\u0103toarea func\u021bie scris\u0103 \u00een limbajul C:\n\n  int S(int a[], int p, int u) {\n    if (p > u) return 0;\n\n    else {\n      int m = (p + u) / 2;\n      return a[m] + S(a, p, m - 1) + S(a, m + 1, u);\n    }\n  }\n\n\u015etiind c\u0103 tabloul a este format din n numere \u00eentregi, iar apelul subprogramului va fi\ud835\udc46(\ud835\udc4e, 0, \ud835\udc5b\u22121), preciza\u021bi ce va calcula func\u021bia\ud835\udc46:\n\n  a) valoarea elementului din mijlocul tabloului\ud835\udc4e;\nb) dublul sumei valorilor din tabloul\ud835\udc4e;\nc) num\u0103rul valorilor pozitive din tabloul\ud835\udc4e;\nd):white_check_mark: suma valorilor din tabloul\ud835\udc4e.\n  ", "answers": [], "correct_answers": []}, {"question": " Dac\u0103 ultima solu\u021bie afi\u015fat\u0103 de algoritmul backtracking pentru generarea tuturor permut\u0103rilor mul\u021bimii {\n    1,\n    2,\n    \u2026,\n    7\n  }\neste 7, 6, 3, 5, 4, 2, 1, atunci urm\u0103toarea solu\u021bie care va fi afi\u015fat\u0103 este:\n\n  a) 7, 6, 4, 1, 2, 5, 3\nb) 7, 1, 2, 3, 4, 5, 6\nc):white_check_mark: 7, 6, 4, 1, 2, 3, 5\nd) 7, 6, 5, 3, 4, 2, 1\n  ", "answers": [], "correct_answers": []}, {"question": " Dac\u0103 ultima solu\u021bie afi\u015fat\u0103 de algoritmul backtracking pentru generarea tuturor permut\u0103rilor mul\u021bimii {\n    1,\n    2,\n    \u2026,\n    7\n  }\neste 6, 5, 7, 4, 3, 2, 1, atunci urm\u0103toarea solu\u021bie care va fi afi\u015fat\u0103 este:\n\n  a) 7, 1, 2, 3, 4, 5, 6\nb):white_check_mark: 6, 7, 1, 2, 3, 4, 5\nc) 7, 6, 1, 2, 3, 4, 5\nd) 6, 7, 5, 4, 3, 2, 1\n  ", "answers": [], "correct_answers": []}, {"question": " Dac\u0103 ultima solu\u021bie afi\u015fat\u0103 de algoritmul backtracking pentru generarea tuturor permut\u0103rilor mul\u021bimii {\n    1,\n    2,\n    \u2026,\n    7\n  }\neste 6, 7, 4, 5, 3, 2, 1, atunci urm\u0103toarea solu\u021bie care va fi afi\u015fat\u0103 este:\n\n  a) 7, 1, 2, 3, 4, 5, 6\nb) 6, 5, 7, 1, 2, 3, 4\nc):white_check_mark: 6, 7, 5, 1, 2, 3, 4\nd) 6, 1, 2, 3, 4, 5, 7\n  ", "answers": [], "correct_answers": []}, {"question": " Folosind tehnica de programare backtracking pentru a genera toate permut\u0103rile mul\u021bimii {\n    1,\n    2,\n    ...,\n    \ud835\udc5b\n  }, o solu\u021bie se memoreaz\u0103 sub forma unui tablou unidimensional\ud835\udc65 1, \ud835\udc652, ..., \ud835\udc65\ud835\udc5b.Dac\u0103 au fost deja generate valori pentru componentele\ud835\udc65 1, \ud835\udc652, ..., \ud835\udc65\ud835\udc58\u22121, iar pentru componenta\ud835\udc65\ud835\udc58(1 < \ud835\udc58 < \ud835\udc5b) au fost deja testate toate valorile posibile \u015fi nu a fost g\u0103sit\u0103 niciuna convenabil\u0103, atunci:\n\n  a):white_check_mark: se \u00eencearc\u0103 alegerea unei noi valori pentru\ud835\udc65\ud835\udc58\u2212 1;\nb) se \u00eencearc\u0103 alegerea unei noi valori pentru\ud835\udc65 1, oricare ar fi valoarea lui\ud835\udc58;\n\nc) se \u00eencheie algoritmul;\nd) se \u00eencearc\u0103 alegerea unei valori pentru componenta\ud835\udc65\ud835\udc58 + 1.", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m ecua\u021bia\ud835\udc4e 1\ud835\udc65 1 + \ud835\udc4e2\ud835\udc65 2 + \u22ef +\ud835\udc4e\ud835\udc5b\ud835\udc65\ud835\udc5b = \ud835\udc66, unde\ud835\udc4e 1, \ud835\udc4e2, \u2026, \ud835\udc4e\ud835\udc5b, \ud835\udc66sunt numere naturale nenule.Pentru a determina toate solu\u021biile ecua\u021biei de forma(\ud835\udc651, \ud835\udc652, \u2026, \ud835\udc65\ud835\udc5b), cu\ud835\udc65 1, \ud835\udc652, \u2026, \ud835\udc65\ud835\udc5bnumere naturale, se poate folosi direct algoritmul backtracking pentru:\n\n  a) generarea permut\u0103rilor;\nb) descompunerea unui num\u0103r natural ca sum\u0103 de numere naturale nenule;\nc):white_check_mark: plata unei sume folosind\ud835\udc5b tipuri de monede;\nd) generarea combin\u0103rilor.\n  ", "answers": [], "correct_answers": []}, {"question": " Un algoritm optim care s\u0103 afi\u015feze toate sub\u015firurile cresc\u0103toare de lungime maxim\u0103 ale unui \u015fir format din\ud835\udc5b numere folose\u015fte:\n\n  a) doar metoda program\u0103rii dinamice;\nb) doar metoda backtracking(se genereaz\u0103 toate sub\u015firurile \u015firului respectiv, iar pentru fiecare sub\u015fir se verific\u0103 dac\u0103 este cresc\u0103tor \u015fi, respectiv, maximal);\nc):white_check_mark: mai \u00eent\u00e2i metoda program\u0103rii dinamice pentru a determina lungimea maxim\u0103\ud835\udc59\ud835\udc5a\ud835\udc4e\ud835\udc65 a unui sub\u015fir cresc\u0103tor al \u015firului dat \u015fi apoi metoda backtracking pentru a genera toate sub\u015firurile cresc\u0103toare de lungime\ud835\udc59\ud835\udc5a\ud835\udc4e\ud835\udc65 ale \u015firului considerat;\nd) doar metoda Greedy.\n  ", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m c\u0103 \u00een Facultatea de Informatic\u0103 sunt \u00eenscri\u015fi\ud835\udc5b studen\u021bi \u00een anul III.Pentru a afi\u015fa toate grupele ce pot fi formate din c\u00e2te\ud835\udc5d studen\u021bi(\ud835\udc5d\u2264\ud835\udc5b) putem folosi algoritmul backtracking pentru:\n\n  a) generarea aranjamentelor formate din p elemente ale unei mul\u021bimi cu n elemente;\nb) generarea permut\u0103rilor unei mul\u021bimi cu p elemente;\nc):white_check_mark: generarea combin\u0103rilor formate din p elemente ale unei mul\u021bimi cu n elemente;\nd) generarea aranjamentelor formate din n elemente ale unei mul\u021bimi cu p elemente.\n  ", "answers": [], "correct_answers": []}, {"question": " Utiliz\u00e2nd metoda backtracking, se genereaz\u0103 toate descompunerile distincte ale num\u0103rului natural\ud835\udc5b = 10 ca sum\u0103 a cel pu\u021bin dou\u0103 numere naturale nenule.Care este ultima descompunere generat\u0103 ?\n\n  a) 4 + 3 + 2 + 1\nb) 9 + 1\nc) 4 + 6\nd):white_check_mark: 5 + 5", "answers": [], "correct_answers": []}, {"question": " Utiliz\u00e2nd metoda backtracking, se genereaz\u0103 toate descompunerile distincte ale num\u0103rului natural\ud835\udc5b = 16 ca sum\u0103 a cel pu\u021bin dou\u0103 numere naturale nenule.Care este ultima descompunere generat\u0103 ?\n\n  a) 4 + 4 + 4 + 4\n\nb) 15 + 1\nc) 7 + 9\nd):white_check_mark: 8 + 8", "answers": [], "correct_answers": []}, {"question": " Fie\ud835\udc46 o sum\u0103 de bani \u015fi\ud835\udc63 1, \ud835\udc632, \u2026, \ud835\udc63\ud835\udc5bvalorile a n tipuri de monede.Presupun\u00e2nd c\u0103 din fiecare tip avem la dispozi\u0163ie un num\u0103r nelimitat de monede, pentru afi\u015farea tuturor modalit\u0103\u0163ilor \u00een care poate fi pl\u0103tit\u0103 suma\ud835\udc46 folosind monede disponibile trebuie s\u0103 utiliz\u0103m un algoritm bazat pe metoda:\n\n  a) Greedy;\nb):white_check_mark: backtracking;\nc) program\u0103rii dinamice;\nd) Divide et Impera.\n  ", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m un rucsac cu ajutorul c\u0103ruia putem transporta 66 kg \u015fi 7 obiecte av\u00e2nd greut\u0103\u021bile 23, 10, 10, 25, 38, 7 \u015fi 5 kg, iar c\u00e2\u015ftigurile ob\u021binute prin transportul integral al fiec\u0103rui obiect\nla destina\u021bie sunt 69, 10, 30, 100, 19, 14 \u015fi 50 RON.\u015etiind c\u0103 din orice obiect putem \u00eenc\u0103rca \u015fi numai o parte a sa, c\u00e2\u015ftigul maxim pe care \u00eel putem ob\u021bine este:\n\n  a) 250.5 RON\nb) 217 RON\nc) 265 RON\nd):white_check_mark: 255 RON", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m un rucsac cu ajutorul c\u0103ruia putem transporta 67 kg \u015fi 7 obiecte av\u00e2nd greut\u0103\u021bile 10, 5, 20, 10, 20, 25 \u015fi 21 kg, iar c\u00e2\u015ftigurile ob\u021binute prin transportul integral al fiec\u0103rui\nobiect la destina\u021bie sunt 30, 40, 40, 10, 4, 50 \u015fi 30 RON.\u015etiind c\u0103 din oricare obiect putem \u00eenc\u0103rca \u015fi numai o parte a sa, c\u00e2\u015ftigul maxim pe care \u00eel putem ob\u021bine este:\n\n  a) 114 RON\nb):white_check_mark: 170 RON\nc) 280 RON\nd) 163.7 RON\n  ", "answers": [], "correct_answers": []}, {"question": " Consider\u0103m un rucsac cu ajutorul c\u0103ruia putem transporta 53 kg \u015fi 7 obiecte av\u00e2nd greut\u0103\u021bile 10, 5, 18, 10, 8, 20 \u015fi 40 kg, iar c\u00e2\u015ftigurile ob\u021binute prin transportul integral al fiec\u0103rui obiect\nla destina\u021bie sunt 30, 40, 36, 10, 16, 10 \u015fi 30 RON.\u015etiind c\u0103 din oricare obiect putem \u00eenc\u0103rca \u015fi numai o parte a sa, c\u00e2\u015ftigul maxim pe care \u00eel putem ob\u021bine este:\n\n  a) 133 RON\nb) 121 RON\nc):white_check_mark: 133.5 RON\nd) 136.5 RON\n  ", "answers": [], "correct_answers": []}, {"question": " Stabili\u021bi care dintre urm\u0103toarele propozi\u021bii referitoare la tehnica de programare Greedy sunt adev\u0103rate:\n\n  a) conduce \u00eentotdeauna la o solu\u021bie optim\u0103;\nb) construie\u015fte o solu\u021bie element cu element \u015fi \u00een cazul \u00een care valoarea elementului curent nu verific\u0103 anumite condi\u021bii se renun\u021b\u0103 la acesta \u015fi se revine la elementul anterior;\nc):white_check_mark: g\u0103se\u015fte \u00eentotdeauna o singur\u0103 solu\u021bie a unei probleme;\nd):white_check_mark: conduce la o solu\u021bie optim\u0103 doar \u00een cazul \u00een care s - a demonstrat matematic corectitudinea criteriului de selec\u021bie pe baza c\u0103ruia un element din mul\u021bimea ini\u021bial\u0103 este ad\u0103ugat \u00een mul\u021bimea ce reprezint\u0103 solu\u021bia problemei.\n  ", "answers": [], "correct_answers": []}, {"question": " La un ghi\u015feu stau la coad\u0103\ud835\udc5b persoane, numerotate cu 1, 2, ..., \ud835\udc5b.Cunosc\u00e2nd timpii de servire\ud835\udc61 1, \ud835\udc612, \u2026, \ud835\udc61\ud835\udc5bai celor\ud835\udc5b persoane \u015fi \u015ftiind c\u0103 pentru a servi o persoan\u0103\ud835\udc58 trebuie servite persoanele 1, 2, ..., \ud835\udc58\u22121 aflate \u00eenaintea sa, trebuie s\u0103 determin\u0103m un mod de rearanjare al persoanelor la coad\u0103, astfel \u00eenc\u00e2t timpul de a\u015fteptare al fiec\u0103rei persoane s\u0103 fie minim.Stabili\u021bi care dintre urm\u0103toarele variante de rezolvare a acestei probleme este corect\u0103 \u015fi are o complexitate minim\u0103:\n\n  a) se genereaz\u0103 toate modurile \u00een care pot fi rearanjate cele\ud835\udc5b persoane la coad\u0103 \u015fi pentru fiecare mod de rearanjare se calculeaz\u0103 \u00eentr - un tablou timpii de servire, iar solu\u021bia este dat\u0103 de tabloul minim \u00een sens lexicografic;\nb) se rearanjeaz\u0103 persoanele \u00een ordinea descresc\u0103toare a timpilor de servire;\nc) se genereaz\u0103 toate modurile \u00een care pot fi rearanjate cele\ud835\udc5b persoane la coad\u0103 \u015fi pentru fiecare mod de rearanjare se calculeaz\u0103 timpul total\ud835\udc47 de servire al celor\ud835\udc5b persoane, iar solu\u021bia este tabloul pentru care valoarea lui\ud835\udc47 este minim\u0103;\nd):white_check_mark: se rearanjeaz\u0103 persoanele \u00een ordinea cresc\u0103toare a timpilor de servire.\n  ", "answers": [], "correct_answers": []}, {"question": " La un ghi\u015feu stau la coad\u0103 7 persoane\ud835\udc5d 1, \ud835\udc5d2, \u2026, \ud835\udc5d7. Cunosc\u00e2nd timpii lor de servire\ud835\udc61 1 = 10, \ud835\udc612 = 6, \ud835\udc613 = 5, \ud835\udc614 = 6, \ud835\udc615 = 2, \ud835\udc616 = 8, \ud835\udc617 = 4 \u015fi \u015ftiind c\u0103 pentru a servi o persoan\u0103 trebuie servite, mai \u00eent\u00e2i, toate persoanele aflate \u00eenaintea sa, preciza\u021bi care dintre urm\u0103toarele modalit\u0103\u021bi de rearanjare a persoanelor la coad\u0103 minimizeaz\u0103 timpul mediu de a\u0219teptare:\n\n  a):white_check_mark: \ud835\udc5d5, \ud835\udc5d7, \ud835\udc5d3, \ud835\udc5d2, \ud835\udc5d4, \ud835\udc5d6, \ud835\udc5d1\nb)\ud835\udc5d 1, \ud835\udc5d6, \ud835\udc5d4, \ud835\udc5d2, \ud835\udc5d3, \ud835\udc5d5, \ud835\udc5d7\nc):white_check_mark: \ud835\udc5d5, \ud835\udc5d7, \ud835\udc5d3, \ud835\udc5d4, \ud835\udc5d2, \ud835\udc5d6, \ud835\udc5d1\nd)\ud835\udc5d 3, \ud835\udc5d7, \ud835\udc5d2, \ud835\udc5d1, \ud835\udc5d6, \ud835\udc5d4, \ud835\udc5d5\n  ", "answers": [], "correct_answers": []}, {"question": " La un ghi\u015feu stau la coad\u0103 7 persoane\ud835\udc5d 1, \ud835\udc5d2, \u2026, \ud835\udc5d7. Cunosc\u00e2nd timpii lor de servire\ud835\udc61 1 = 12, \ud835\udc612 = 6, \ud835\udc613 = 15, \ud835\udc614 = 16, \ud835\udc615 = 12, \ud835\udc616 = 8, \ud835\udc617 = 2 \u015fi \u015ftiind c\u0103 pentru a servi o persoan\u0103 trebuie servite, mai \u00eent\u00e2i, toate persoanele aflate \u00eenaintea sa, preciza\u021bi care dintre urm\u0103toarele modalit\u0103\u021bi de rearanjare a persoanelor la coad\u0103 minimizeaz\u0103 timpul mediu de a\u0219teptare:\n\n  a):white_check_mark: \ud835\udc5d7, \ud835\udc5d2, \ud835\udc5d6, \ud835\udc5d5, \ud835\udc5d1, \ud835\udc5d3, \ud835\udc5d4\nb)\ud835\udc5d 3, \ud835\udc5d7, \ud835\udc5d2, \ud835\udc5d1, \ud835\udc5d6, \ud835\udc5d4, \ud835\udc5d5\nc)\ud835\udc5d 4, \ud835\udc5d3, \ud835\udc5d1, \ud835\udc5d5, \ud835\udc5d6, \ud835\udc5d2, \ud835\udc5d7\nd):white_check_mark: \ud835\udc5d7, \ud835\udc5d2, \ud835\udc5d6, \ud835\udc5d1, \ud835\udc5d5, \ud835\udc5d3, \ud835\udc5d4", "answers": [], "correct_answers": []}, {"question": " \u00cen Aula Magna a Universit\u0103\u021bii Titu Maiorescu din Bucure\u0219ti se va organiza un festival de teatru care va dura o singur\u0103 zi.Fiecare regizor a transmis organizatorului festivalului intervalul de timp \u00een care se poate desf\u0103\u0219ura spectacolul s\u0103u.Organizatorul festivalului dore\u0219te s\u0103 programeze un num\u0103r maxim de spectacole.\u0218tiind c\u0103 spectacolele nu se pot suprapune \u0219i c\u0103 \u00eentre oricare dou\u0103 spectacole consecutive nu exist\u0103 nicio pauz\u0103, stabili\u021bi care dintre strategiile de planificare de tip Greedy de mai jos pot fi folosite de c\u0103tre organizatorul festivalului pentru a planifica un num\u0103r maxim de spectacole \u00een Aula Magna \u00een ziua respectiv\u0103:\n\n  a):white_check_mark: se sorteaz\u0103 spectacolele \u00een ordinea cresc\u0103toare a orelor la care se termin\u0103, se programeaz\u0103 primul spectacol \u0219i apoi se consider\u0103, pe r\u00e2nd, restul spectacolelor, un spectacol fiind programat doar dac\u0103 \u00eencepe dup\u0103 ce se termin\u0103 spectacolul programat anterior;\nb) se sorteaz\u0103 spectacolele \u00een ordinea cresc\u0103toare a duratei lor, se programeaz\u0103 primul spectacol \u0219i apoi se consider\u0103, pe r\u00e2nd, restul spectacolelor, un spectacol fiind programat doar dac\u0103 \u00eencepe dup\u0103 ce se termin\u0103 spectacolul programat anterior;\nc) se sorteaz\u0103 spectacolele \u00een ordinea cresc\u0103toare a orelor la care \u00eencep, se programeaz\u0103 primul spectacol \u0219i apoi se consider\u0103, pe r\u00e2nd, restul spectacolelor, un spectacol fiind programat doar dac\u0103 \u00eencepe dup\u0103 ce se termin\u0103 spectacolul programat anterior;\nd) se sorteaz\u0103 spectacolele \u00een ordinea descresc\u0103toare a orelor la care se termin\u0103, se programeaz\u0103 primul spectacol \u0219i apoi se consider\u0103, pe r\u00e2nd, restul spectacolelor, un spectacol fiind programat doar dac\u0103 \u00eencepe dup\u0103 ce se termin\u0103 spectacolul programat anterior.\n  ", "answers": [], "correct_answers": []}, {"question": " \u00cen Aula Magna a Universit\u0103\u021bii Titu Maiorescu din Bucure\u0219ti se va organiza un festival de teatru care va dura o singur\u0103 zi.Fiecare regizor a transmis organizatorului festivalului intervalul de timp[\u210e\u210e1: \ud835\udc5a\ud835\udc5a1, \u210e\u210e2: \ud835\udc5a\ud835\udc5a2] \u00een care se poate desf\u0103\u0219ura spectacolul s\u0103u.\u0218tiind c\u0103 spectacolele nu se pot suprapune \u0219i \u00eentre oricare dou\u0103 spectacole consecutive nu exist\u0103 nicio pauz\u0103, organizatorul festivalului s - a g\u00e2ndit s\u0103 foloseasc\u0103 o strategie de planificare de tip Greedy pentru a planifica un num\u0103r maxim de spectacole \u00een cadrul festivalului.Consider\u00e2nd c\u0103 7 regizori au trimis intervalele de desf\u0103\u015furare ale spectacolelor lor\ud835\udc60 1 = [08: 00, 10: 30], \ud835\udc602 = [08: 30, 09: 00], \ud835\udc603 = [16: 30, 18: 00], \ud835\udc604 = [10: 30, 10: 45], \ud835\udc605 = [11: 00, 17: 00], \ud835\udc606 = [11: 30, 13: 00], \ud835\udc607 = [15: 15, 16: 45], preciza\u021bi care dintre variantele de mai jos reprezint\u0103 o planificare corect\u0103, cu un num\u0103r maxim de spectacole:\n\n  a) S1, S2, S4, S5, S6\nb):white_check_mark: S2, S4, S6, S7\nc):white_check_mark: S2, S4, S6, S3\nd) S1, S5\n  ", "answers": [], "correct_answers": []}, {"question": " \u00cen Aula Magna a Universit\u0103\u021bii Titu Maiorescu din Bucure\u0219ti se va organiza un festival de teatru care va dura o singur\u0103 zi.Fiecare regizor a transmis organizatorului festivalului intervalul de timp[\u210e\u210e1: \ud835\udc5a\ud835\udc5a1, \u210e\u210e2: \ud835\udc5a\ud835\udc5a2] \u00een care se poate desf\u0103\u0219ura spectacolul s\u0103u.\u0218tiind c\u0103 spectacolele nu se pot suprapune \u0219i \u00eentre oricare dou\u0103 spectacole consecutive nu exist\u0103 nicio pauz\u0103, organizatorul festivalului s - a g\u00e2ndit s\u0103 foloseasc\u0103 o strategie de planificare de tip Greedy pentru a planifica un num\u0103r maxim de spectacole \u00een cadrul festivalului.Consider\u00e2nd c\u0103 7 regizori au trimis intervalele de desf\u0103\u015furare ale spectacolelor lor\ud835\udc60 1 =\n\n  [08: 00, 10: 30], \ud835\udc602 = [08: 30, 11: 00], \ud835\udc603 = [16: 30, 18: 00], \ud835\udc604 = [10: 30, 10: 45], \ud835\udc605 = [11: 00, 12: 00], \ud835\udc606 = [12: 30, 16: 00], \ud835\udc607 = [17: 15, 18: 45], preciza\u021bi care dintre variantele\nde mai jos reprezint\u0103 o planificare corect\u0103, cu un num\u0103r maxim de spectacole:\n  a) S1, S5, S6, S3\nb) S2, S4, S5, S6, S7\nc):white_check_mark: S1, S4, S5, S6, S3\nd):white_check_mark: S1, S4, S5, S6, S7", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 un triunghi de numere \u00eentregi format din\ud835\udc5b linii, astfel: prima linie con\u021bine un num\u0103r, a doua linie con\u021bine dou\u0103 numere, ..., ultima linie con\u021bine\ud835\udc5b numere.\u00cen acest triunghi se pot forma sume de numere \u00eentregi \u00een felul urm\u0103tor: \uf0d8se selecteaz\u0103 num\u0103rul aflat pe prima linie;\uf0d8\nla fiecare pas se selecteaz\u0103 fie num\u0103rul aflat pe urm\u0103toarea linie sub ultimul num\u0103r selectat, fie num\u0103rul aflat pe urm\u0103toarea linie \u0219i o coloan\u0103 la dreapta fa\u021b\u0103 de ultimul num\u0103r selectat, p\u00e2n\u0103 c\u00e2nd se ajunge pe ultima linie a triunghiului de numere.\n\nUn algoritm cu complexitate minim\u0103 care determin\u0103 cea mai mare sum\u0103 ce se poate ob\u021bine respect\u00e2nd regulile de mai sus folose\u0219te metoda:\n\n  a) Greedy;\nb) backtracking;\nc):white_check_mark: program\u0103rii dinamice;\nd) Divide et Impera.\n  ", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 urm\u0103torul triunghi de numere \u00eentregi format din\ud835\udc5b = 4 linii:\n\n  10\n12\u2212 20\n30 50 180\n21 14 20 16\n\u00cen acest triunghi se pot forma sume de numere \u00eentregi \u00een felul urm\u0103tor: \uf0d8se selecteaz\u0103 num\u0103rul aflat pe prima linie;\uf0d8\nla fiecare pas se selecteaz\u0103 fie num\u0103rul aflat pe urm\u0103toarea linie sub ultimul num\u0103r selectat, fie num\u0103rul aflat pe urm\u0103toarea linie \u0219i o coloan\u0103 la dreapta fa\u021b\u0103 de ultimul num\u0103r selectat, p\u00e2n\u0103 c\u00e2nd se ajunge pe ultima linie a triunghiului de numere.\n\nCare este suma maxim\u0103 ce poate fi ob\u021binut\u0103 \u00een triunghiul dat, respect\u00e2nd condi\u021biile precizate mai sus ?\n\n  a):white_check_mark: 190\nb) 73\nc) 92\nd) 302\n  ", "answers": [], "correct_answers": []}, {"question": " Se consider\u0103 urm\u0103torul triunghi de numere \u00eentregi format din\ud835\udc5b = 4 linii:\n\n  100\u2212 12\u2212 20\n130 200 118\n210 114 320 160\n\n\u00cen acest triunghi se pot forma sume de numere \u00eentregi \u00een felul urm\u0103tor: \uf0d8se selecteaz\u0103 num\u0103rul aflat pe prima linie;\uf0d8\nla fiecare pas se selecteaz\u0103 fie num\u0103rul aflat pe urm\u0103toarea linie sub ultimul num\u0103r selectat, fie num\u0103rul aflat pe urm\u0103toarea linie \u0219i o coloan\u0103 la dreapta fa\u021b\u0103 de ultimul num\u0103r selectat, p\u00e2n\u0103 c\u00e2nd se ajunge pe ultima linie a triunghiului de numere.\n\nCare este suma maxim\u0103 ce poate fi ob\u021binut\u0103 \u00een triunghiul dat, respect\u00e2nd condi\u021biile precizate mai sus ?\n\n  a) 518\nb) 402\nc) 428\nd):white_check_mark: 608", "answers": [], "correct_answers": []}, {"question": " Fie\ud835\udc46 o sum\u0103 de bani \u015fi\ud835\udc63 1, \ud835\udc632, \u2026, \ud835\udc63\ud835\udc5bvalorile a n tipuri de monede(se presupune c\u0103 din fiecare tip de moned\u0103 avem la dispozi\u0163ie un num\u0103r nelimitat de monede).Un algoritm optim care s\u0103 determine num\u0103rul minim de monede cu care poate fi pl\u0103tit\u0103 suma\ud835\udc46, folosind monede de tipurile date, folose\u0219te metoda:\n\n  a) Greedy;\nb) backtracking;\nc):white_check_mark: program\u0103rii dinamice;\nd) Divide et Impera.\n  ", "answers": [], "correct_answers": []}, {"question": " Preciza\u021bi c\u00e2te sub\u0219iruri strict cresc\u0103toare de lungime maxim\u0103 con\u021bine tabloul\ud835\udc63 = (12, 18, 17, 11, 10, 16, 17, 26):\n\n  a) 1\nb) 2\nc):white_check_mark: 3\nd) 4\n  ", "answers": [], "correct_answers": []}, {"question": " Preciza\u021bi c\u00e2te sub\u0219iruri strict cresc\u0103toare de lungime maxim\u0103 con\u021bine tabloul\ud835\udc63 = (21, 18, 13, 19, 21, 16, 16, 17, 26):\n\n  a) 1\nb):white_check_mark: 2\nc) 3\nd) 4\n  ", "answers": [], "correct_answers": []}, {"question": " Indica\u021bi lungimea maxim\u0103 a unui sub\u0219ir strict cresc\u0103tor din tabloul\ud835\udc63 = (12, 18, 17, 11, 10, 26, 17, 26, 19, 28):\n\n  a) 2\nb):white_check_mark: 4\nc) 3\nd) 5\n  ", "answers": [], "correct_answers": []}, {"question": " Indica\u021bi lungimea maxim\u0103 a unui sub\u0219ir strict cresc\u0103tor din tabloul\ud835\udc63 = (18, 14, 17, 4, 8, 15, 12, 19, 16, 22):\n\n  a) 2\nb) 4\nc) 3\nd):white_check_mark: 5", "answers": [], "correct_answers": []}, {"question": " Av\u00e2nd la dispozi\u021bie un num\u0103r nelimitat de monede cu valorile 5 RON, 4 RON, 3 RON \u0219i 1\nRON, preciza\u021bi num\u0103rul minim de monede cu care poate fi pl\u0103tit\u0103 suma de 17 RON:\n\n  a):white_check_mark: 4\nb) 5\nc) 3\nd) 6\n  ", "answers": [], "correct_answers": []}, {"question": " Av\u00e2nd la dispozi\u021bie un num\u0103r nelimitat de monede cu valorile 7 RON, 6 RON, 3 RON \u0219i 2\nRON, preciza\u021bi num\u0103rul minim de monede cu care poate fi pl\u0103tit\u0103 suma de 19 RON:\n\n  a) 6\nb) 3\nc):white_check_mark: 4\nd) 5", "answers": [], "correct_answers": []}]